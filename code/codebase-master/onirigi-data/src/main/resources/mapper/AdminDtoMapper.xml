<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.infervision.dao.AdminDtoMapper">
  <resultMap id="BaseResultMap" type="com.infervision.model.AdminDto">
    <id column="admin_id" jdbcType="BIGINT" property="adminId" />
    <result column="admin_name" jdbcType="VARCHAR" property="adminName" />
    <result column="admin_grade" jdbcType="INTEGER" property="adminGrade" />
    <result column="admin_email" jdbcType="VARCHAR" property="adminEmail" />
    <result column="admin_phone_num" jdbcType="VARCHAR" property="adminPhoneNum" />
    <result column="admin_identity_num" jdbcType="VARCHAR" property="adminIdentityNum" />
    <result column="admin_password" jdbcType="VARCHAR" property="adminPassword" />
    <result column="admin_salt" jdbcType="VARCHAR" property="adminSalt" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
  </resultMap>
  <sql id="Base_Column_List">
    admin_id, admin_name, admin_grade, admin_email, admin_phone_num, admin_identity_num, 
    admin_password, admin_salt, create_date, update_date, user_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from admin
    where admin_id = #{adminId,jdbcType=BIGINT}
  </select>
  <select id="selectByAdminName" resultMap="BaseResultMap">

    select
    <include refid="Base_Column_List" />
    from admin
    where admin_name = #{adminName,jdbcType=VARCHAR}

  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from admin
    where admin_id = #{adminId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="adminId"  parameterType="com.infervision.model.AdminDto">
    insert into admin ( admin_name, admin_grade,
      admin_email, admin_phone_num, admin_identity_num, 
      admin_password, admin_salt, create_date, 
      update_date, user_id)
    values (#{adminName,jdbcType=VARCHAR}, #{adminGrade,jdbcType=INTEGER},
      #{adminEmail,jdbcType=VARCHAR}, #{adminPhoneNum,jdbcType=VARCHAR}, #{adminIdentityNum,jdbcType=VARCHAR}, 
      #{adminPassword,jdbcType=VARCHAR}, #{adminSalt,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateDate,jdbcType=TIMESTAMP}, #{userId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.infervision.model.AdminDto">
    insert into admin
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="adminId != null">
        admin_id,
      </if>
      <if test="adminName != null">
        admin_name,
      </if>
      <if test="adminGrade != null">
        admin_grade,
      </if>
      <if test="adminEmail != null">
        admin_email,
      </if>
      <if test="adminPhoneNum != null">
        admin_phone_num,
      </if>
      <if test="adminIdentityNum != null">
        admin_identity_num,
      </if>
      <if test="adminPassword != null">
        admin_password,
      </if>
      <if test="adminSalt != null">
        admin_salt,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="userId != null">
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="adminId != null">
        #{adminId,jdbcType=BIGINT},
      </if>
      <if test="adminName != null">
        #{adminName,jdbcType=VARCHAR},
      </if>
      <if test="adminGrade != null">
        #{adminGrade,jdbcType=INTEGER},
      </if>
      <if test="adminEmail != null">
        #{adminEmail,jdbcType=VARCHAR},
      </if>
      <if test="adminPhoneNum != null">
        #{adminPhoneNum,jdbcType=VARCHAR},
      </if>
      <if test="adminIdentityNum != null">
        #{adminIdentityNum,jdbcType=VARCHAR},
      </if>
      <if test="adminPassword != null">
        #{adminPassword,jdbcType=VARCHAR},
      </if>
      <if test="adminSalt != null">
        #{adminSalt,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.infervision.model.AdminDto">
    update admin
    <set>
      <if test="adminName != null">
        admin_name = #{adminName,jdbcType=VARCHAR},
      </if>
      <if test="adminGrade != null">
        admin_grade = #{adminGrade,jdbcType=INTEGER},
      </if>
      <if test="adminEmail != null">
        admin_email = #{adminEmail,jdbcType=VARCHAR},
      </if>
      <if test="adminPhoneNum != null">
        admin_phone_num = #{adminPhoneNum,jdbcType=VARCHAR},
      </if>
      <if test="adminIdentityNum != null">
        admin_identity_num = #{adminIdentityNum,jdbcType=VARCHAR},
      </if>
      <if test="adminPassword != null">
        admin_password = #{adminPassword,jdbcType=VARCHAR},
      </if>
      <if test="adminSalt != null">
        admin_salt = #{adminSalt,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where admin_id = #{adminId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.infervision.model.AdminDto">
    update admin
    set admin_name = #{adminName,jdbcType=VARCHAR},
      admin_grade = #{adminGrade,jdbcType=INTEGER},
      admin_email = #{adminEmail,jdbcType=VARCHAR},
      admin_phone_num = #{adminPhoneNum,jdbcType=VARCHAR},
      admin_identity_num = #{adminIdentityNum,jdbcType=VARCHAR},
      admin_password = #{adminPassword,jdbcType=VARCHAR},
      admin_salt = #{adminSalt,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=INTEGER}
    where admin_id = #{adminId,jdbcType=BIGINT}
  </update>
</mapper>